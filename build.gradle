buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.github.node-gradle.node' version '2.2.3' // node를 gradle로 관리할 수 있는 플러그인을 추가
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'hongik.ce'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA 사용하기위해 필요
	implementation 'org.springframework.boot:spring-boot-starter-security' // 인증, 인가(권한) 등을 더 쉽게 개발하기위해 필요
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // HTML 템플릿 엔진
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web' // 웹 관련 개발하기위해 필요
//	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
//	implementation 'org.springframework.boot:spring-boot-starter-actuator' //모니터링 기능 등을 손쉽게 추가가능
//	implementation 'org.springframework.boot:spring-boot-starter-mail' // 메일 전송하기위해 필요
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
//	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
//	implementation "org.hibernate:hibernate-spatial" // 좌표데이터 변환 라이브러리

	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

    compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

node {
	version = '16.9.1'
	download = true
	nodeModulesDir = file("${projectDir}/src/main/resources/static")
}

task copyFrontLib(type: Copy) {
	from "${projectDir}/src/main/resources/static"
	into "${projectDir}/build/resources/main/static/."
}

copyFrontLib.dependsOn npmInstall
compileJava.dependsOn copyFrontLib

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}